AWSTemplateFormatVersion: '2010-09-09'
Metadata:
  License: Apache-2.0
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: 'Parent Stacks'
        Parameters:
        - ParentAlertStack
      - Label:
          default: "VPC"
        Parameters:
          - VPCID
          - VPCSubnet
      - Label:
          default: "SSM-CW"
        Parameters:
          - SystemsManagerAccess
          - LogsRetentionInDays
      - Label:
          default: "Instance"
        Parameters:
          - InstanceType
          - EC2VolumeSizes
      - Label:
          default: "PHP"
        Parameters:
          - PHPVersion
      - Label:
          default: "Apache"
        Parameters:
          - servername
          - KeepAliveTimeout
          - MaxKeepAliveRequests
          - TimeOut
      - Label:
          default: "Mariadb 10.5 Database"
        Parameters:
          - DBName
          - DBUser
          - DBPassword
          - DBRootPassword
      - Label:
          default: "FTP Details"
        Parameters:
          - FTPUser
          - FTPPassword
      - Label:
          default: "Instance connection"
        Parameters:
          - KeyName
          - SSHLocation
          - FTPLocation
Description: 'AWS CloudFormation LAMP Setup'
Parameters:
  ParentAlertStack:
    Description: 'Optional but recommended stack name of parent alert stack based on https://github.com/kkpkishan/AWS-SNS/blob/master/alert.yaml template.'
    Type: String
    Default: ''
  VPCID:
    Description: Name of an existing VPC
    Type: AWS::EC2::VPC::Id
  VPCSubnet:
    Description: Name of an existing Private Subnet
    Type: AWS::EC2::Subnet::Id
  SystemsManagerAccess:
    Description: 'Enable AWS Systems Manager agent and authorization.'
    Type: String
    Default: true
    AllowedValues:
    - true
    - false
  LogsRetentionInDays:
    Description: 'Specifies the number of days you want to retain log events.'
    Type: Number
    Default: 14
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]
  servername:
    Default: 'example.com'
    Description: The value used for the Apache Vhost.
    Type: String
  KeepAliveTimeout:
    Description: 'Specifies the number of Apache KeepAliveTimeout.'
    Type: Number
    Default: 15
    AllowedValues: [15, 30, 60, 120, 180, 300, 360]
  MaxKeepAliveRequests:
    Description: 'Specifies the number of Apache MaxKeepAliveRequests.'
    Type: Number
    Default: 200
    AllowedValues: [200, 400, 500, 1000, 1200, 1500, 200]
  TimeOut:
    Description: 'Specifies the number of Apache TimeOut.'
    Type: Number
    Default: 60
    AllowedValues: [60, 120, 180, 300, 360]
  PHPVersion:
    AllowedValues:
    - php7.2 
    - php7.3
    - php7.4
    - php8.0 
    Default: php7.2
    Description: PHP Version
    Type: String   
  DBName:
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
    Default: example
    Description: The example database name
    MaxLength: '64'
    MinLength: '1'
    Type: String
  DBPassword:
    AllowedPattern: '[a-zA-Z0-9]+'
    ConstraintDescription: must contain only alphanumeric characters.
    Description: The  database admin account password
    MaxLength: '41'
    MinLength: '8'
    NoEcho: 'true'
    Type: String
  DBRootPassword:
    AllowedPattern: '[a-zA-Z0-9]+'
    ConstraintDescription: must contain only alphanumeric characters.
    Description: MySQL root password
    MaxLength: '41'
    MinLength: '8'
    NoEcho: 'true'
    Type: String
  DBUser:
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
    Description: The  database admin account username
    MaxLength: '16'
    MinLength: '3'
    Type: String
  FTPUser:
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
    Description: The  FTP  account username
    MaxLength: '16'
    MinLength: '3'
    Type: String
  FTPPassword:
    AllowedPattern: '[a-zA-Z0-9]+'
    ConstraintDescription: must contain only alphanumeric characters.
    Description: FTP User password
    MaxLength: '41'
    MinLength: '8'
    NoEcho: 'true'
    Type: String
  EC2VolumeSizes:
    Description: 'Specifies the number of Lamp VolumeSize.'
    Type: Number
    Default: 8
    AllowedValues: [8, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 200, 300, 400, 500, 600, 1024]
  InstanceType:
    AllowedValues:
    - t3.small
    - t3.medium
    - t3.large
    - t4g.small
    - t4g.medium
    - t4g.large
    - m6i.medium
    - m6i.large
    - m6i.xlarge
    - m6i.2xlarge
    - m6a.large
    - m6a.xlarge
    - m6a.2xlarge
    - m6a.4xlarge
    - m6a.10xlarge
    - c6i.large
    - c6i.xlarge
    - c6i.2xlarge
    - c6i.4xlarge
    - c6i.8xlarge
    - c6a.large
    - c6a.xlarge
    - c6a.2xlarge
    - c6a.4xlarge
    - c6a.8xlarge
    - c6g.large
    - c6g.xlarge
    - c6g.2xlarge
    - c6g.4xlarge
    - c6g.8xlarge
    - r6i.large
    - r6i.xlarge
    - r6i.2xlarge
    - r6i.4xlarge
    - r6i.8xlarge
    ConstraintDescription: must be a valid EC2 instance type.
    Default: t3.small
    Description: WebServer EC2 instance type
    Type: String
  KeyName:
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
  SSHLocation:
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
    Default: 0.0.0.0/0
    Description: The IP address range that can be used to SSH to the EC2 instances
    MaxLength: '18'
    MinLength: '9'
    Type: String
  FTPLocation:
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
    Default: 0.0.0.0/0
    Description: The IP address range that can be used to FTP to the EC2 instances
    MaxLength: '18'
    MinLength: '9'
    Type: String
Mappings:
  AWSInstanceType2Arch:
    c6i.2xlarge:
      Arch: HVM64
    c6i.4xlarge:
      Arch: HVM64
    c6i.8xlarge:
      Arch: HVM64
    c6i.large:
      Arch: HVM64
    c6i.xlarge:
      Arch: HVM64
    c6a.2xlarge:
      Arch: HVM64
    c6a.4xlarge:
      Arch: HVM64
    c6a.8xlarge:
      Arch: HVM64
    c6a.large:
      Arch: HVM64
    c6a.xlarge:
      Arch: HVM64
    m6i.2xlarge:
      Arch: HVM64
    m6i.large:
      Arch: HVM64
    m6i.medium:
      Arch: HVM64
    m6i.xlarge:
      Arch: HVM64
    m6a.10xlarge:
      Arch: HVM64
    m6a.2xlarge:
      Arch: HVM64
    m6a.4xlarge:
      Arch: HVM64
    m6a.large:
      Arch: HVM64
    m6a.xlarge:
      Arch: HVM64
    r6i.2xlarge:
      Arch: HVM64
    r6i.4xlarge:
      Arch: HVM64
    r6i.8xlarge:
      Arch: HVM64
    r6i.large:
      Arch: HVM64
    r6i.xlarge:
      Arch: HVM64
    t3.large:
      Arch: HVM64
    t3.medium:
      Arch: HVM64
    t3.micro:
      Arch: HVM64
    t3.nano:
      Arch: HVM64
    t3.small:
      Arch: HVM64
    c6g.large:
      Arch: HVMARM
    c6g.xlarge:
      Arch: HVMARM
    c6g.2xlarge:
      Arch: HVMARM
    c6g.4xlarge:
      Arch: HVMARM
    c6g.8xlarge:
      Arch: HVMARM
    t4g.nano:
      Arch: HVMARM
    t4g.micro:
      Arch: HVMARM
    t4g.small:
      Arch: HVMARM
    t4g.medium:
      Arch: HVMARM
    t4g.large:
      Arch: HVMARM

  AWSRegionArch2AMI:
    ap-northeast-1:
      HVM64: ami-0b7546e839d7ace12
      HVMARM: ami-004332b441f90509b
    ap-northeast-2:
      HVM64: ami-0fd0765afb77bcca7
      HVMARM: ami-05d1b0b938144501e
    ap-southeast-1:
      HVM64: ami-0c802847a7dd848c0
      HVMARM: ami-0ba00895a8997fcd0
    ap-southeast-2:
      HVM64: ami-07620139298af599e
      HVMARM: ami-007b3582fa22625ab
    eu-central-1:
      HVM64: ami-0a1ee2fb28fe05df3
      HVMARM: ami-0ceb85bb30095410b
    eu-west-1:
      HVM64: ami-0d71ea30463e0ff8d
      HVMARM: ami-0a6b5206d1730bdce
    sa-east-1:
      HVM64: ami-037c192f0fa52a358
      HVMARM: ami-02ec3b4c883c80b99
    us-east-1:
      HVM64: ami-0cff7528ff583bf9a
      HVMARM: ami-00bf5f1c358708486
    us-west-1:
      HVM64: ami-0d9858aa3c6322f73
      HVMARM: ami-0825c6b3598e9754d
    us-west-2:
      HVM64: ami-098e42ae54c764c35
      HVMARM: ami-08e93a9522bbe6df6
    eu-north-1:
      HVM64: ami-0917076ab9780844d
      HVMARM: ami-0fbd1ecdaa0af2276
    ap-south-1:
      HVM64: ami-08df646e18b182346
      HVMARM: ami-0e0aaf29e73155b91
    eu-west-3:
      HVM64: ami-0f5094faf16f004eb
      HVMARM: ami-00f13602fa9acface
    eu-west-2:
      HVM64: ami-078a289ddf4b09ae0
      HVMARM: ami-08ebecb25179560f7
    ap-northeast-3:
      HVM64: ami-0c66c8e259df7ec04
      HVMARM: ami-0b5d1ddb8df5d0c8e
    me-south-1:
      HVM64: ami-0bf69afb300c322eb
      HVMARM: ami-099948c9b936d71a2
    ca-central-1:
      HVM64: ami-00f881f027a6d74a0
      HVMARM: ami-0e4208b856d700843
    us-east-2:
      HVM64: ami-02d1e544b84bf7502
      HVMARM: ami-03e57de632660544c
Conditions:
  HasSystemsManagerAccess: !Equals [!Ref SystemsManagerAccess, 'true']
  HasAlertTopic: !Not [!Equals [!Ref ParentAlertStack, '']]

Resources:
  WebServer:
    Type: AWS::EC2::Instance
    # DependsOn: IPAddress
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          lamp_install:
          - install_cfn
          - install_lamp
          - configure_lamp
          - VHostfile
          - awslogs
        configure_lamp:
          commands:
            01_configure_lamp:
              command: /tmp/setup.php
            02_set_mysql_root_password:
              command: !Sub |
                mysqladmin -u root password '${DBRootPassword}'
              test: !Sub |
                $(mysql ${DBName} -u root --password='${DBRootPassword}' >/dev/null 2>&1 </dev/null); (( $? != 0 ))
            03_create_database:
              command: !Sub |
                mysql -u root --password='${DBRootPassword}' < /tmp/setup.mysql
              test: !Sub |
                $(mysql ${DBName} -u root --password='${DBRootPassword}' >/dev/null 2>&1 </dev/null); (( $? !=0))
            04_configure_ftp:
              command: "./tmp/setup.ftp"
        install_cfn:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack= ${AWS::StackId}
                region=${AWS::Region}
              group: root
              mode: '000400'
              owner: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.WebServer.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource WebServer --configsets lamp_install --url https://stackbuilder.amazonaws.com
              group: root
              mode: '000400'
              owner: root
          services:
            sysvinit:
              cfn-hup:
                enabled: true
                ensureRunning: true
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
        awslogs:
          packages:
            yum:
              awslogs: []
          files:
            '/etc/awslogs/awscli.conf':
              content: !Sub |
                [default]
                region = ${AWS::Region}
                [plugins]
                cwlogs = cwlogs
              mode: '000644'
              owner: root
              group: root
            '/etc/awslogs/awslogs.conf':
              content: !Sub |
                [general]
                state_file = /var/lib/awslogs/agent-state
                [audit]
                file = /var/log/audit/audit.log
                log_stream_name = {instance_id}/var/log/audit/audit.log
                log_group_name = ${Logs}
                [boot]
                file = /var/log/boot.log
                log_stream_name = {instance_id}/var/log/boot.log
                log_group_name = ${Logs}
                [cron]
                datetime_format = %b %d %H:%M:%S
                file = /var/log/cron
                log_stream_name = {instance_id}/var/log/cron
                log_group_name = ${Logs}
                [maillog]
                datetime_format = %b %d %H:%M:%S
                file = /var/log/maillog
                log_stream_name = {instance_id}/var/log/maillog
                log_group_name = ${Logs}
                [secure]
                datetime_format = %b %d %H:%M:%S
                file = /var/log/secure
                log_stream_name = {instance_id}/var/log/secure
                log_group_name = ${Logs}
              mode: '000644'
              owner: root
              group: root
            '/etc/awslogs/config/httpd.conf':
              content: !Sub |
                [Apache-Access]
                datetime_format = %b %d %H:%M:%S %Y
                file = /var/log/httpd/access_log
                log_stream_name = {instance_id}/var/log/httpd/access_log
                log_group_name = ${Logs}
                [Apache-Error]
                datetime_format = %d/%b/%Y:%H:%M:%S %z
                file = /var/log/httpd/error_log
                log_stream_name = {instance_id}/var/log/httpd/error_log
                log_group_name = ${Logs}
              mode: '000644'
              owner: root
              group: root
        VHostfile:
          files:
            '/etc/httpd/conf.d/site.conf':
              content: !Sub |
                <virtualhost *:80>
                servername  ${servername}
                ServerAlias ${servername}
                Documentroot "/var/www/html"
                
                <Directory "/var/www/html">
                    Options -Indexes +FollowSymLinks
                    AllowOverride All
                    DirectoryIndex index.php  index.html index.htm
                    Require all granted
                </Directory>
                <Location />
                 SetOutputFilter DEFLATE
                 BrowserMatch ^Mozilla/4 gzip-only-text/html
                 BrowserMatch ^Mozilla/4\.0[678] no-gzip
                 BrowserMatch \bMSI[E] !no-gzip !gzip-only-text/html
                 SetEnvIfNoCase Request_URI \.(?:gif|jpe?g|png|swf|flv|pdf|exe|t?gz|zip|bz2|sit|rar)$ no-gzip dont-vary
                </Location>
                <Files ~ "\.(css|js|html|htm|txt|json|xml)$">
                 SetOutputFilter DEFLATE
                </Files>
                KeepAlive On
                KeepAliveTimeout ${KeepAliveTimeout}
                MaxKeepAliveRequests ${MaxKeepAliveRequests}
                TimeOut ${TimeOut}
                </virtualhost>
              mode: "000644"
              owner: root
              group: root
 
        install_lamp:
          files:
            /tmp/setup.php:
              content: !Sub |
                #!/bin/bash -xe
                amazon-linux-extras enable ${PHPVersion}
                yum install -y php php-{pear,cgi,common,curl,mbstring,gd,mysqlnd,gettext,bcmath,json,xml,fpm,intl,zip,imap}
                amazon-linux-extras install mariadb10.5
                systemctl start mariadb
                systemctl enable  mariadb
              group: root
              mode: '000500'
              owner: root
            /tmp/setup.mysql:
              content: !Sub |
                CREATE DATABASE ${DBName};
                CREATE USER '${DBUser}'@'localhost' IDENTIFIED BY '${DBPassword}';
                GRANT ALL ON ${DBName}.* TO '${DBUser}'@'localhost';
                FLUSH PRIVILEGES;
              group: root
              mode: '000400'
              owner: root
            /var/www/html/index.php:
              content: |
                <?php
                phpinfo();
                phpinfo(INFO_MODULES);
                ?>
              group: root
              mode: '000755'
              owner: root
            /tmp/setup.ftp:
              content: !Sub |
                #!/bin/bash
                sed -i 's/anonymous_enable=YES/anonymous_enable=NO/g' /etc/vsftpd/vsftpd.conf
                sed -i 's/listen=NO/listen=YES/g' /etc/vsftpd/vsftpd.conf
                sed -i 's/listen_ipv6=YES/listen_ipv6=NO/g' /etc/vsftpd/vsftpd.conf
                PrivateIP=`curl http://169.254.169.254/latest/meta-data/local-ipv4`
                cat <<EOF >> /etc/vsftpd/vsftpd.conf
                chroot_local_user=YES
                chroot_list_enable=YES
                chroot_list_file=/etc/vsftpd/chroot_list
                pasv_promiscuous=YES
                pasv_max_port=24200
                pasv_min_port=24000
                pasv_address=$PrivateIP
                EOF

                cat <<EOF > /etc/vsftpd/chroot_list 
                ${FTPUser}
                EOF

                useradd -m -d /var/www/html -s /bin/bash ${FTPUser} >/dev/null 2>&1
                echo '${FTPUser}:${FTPPassword}' | sudo chpasswd
                setfacl  -R -m u:${FTPUser}:rwx /var/www/
                systemctl restart vsftpd
                systemctl restart httpd
              group: root
              mode: '000750'
              owner: root
          packages:
            yum:
              httpd: []
              awslogs: []
              vsftpd: []
          services:
            sysvinit:
              httpd:
                enabled: true
                ensureRunning: true
              awslogsd:
                enabled: true
                ensureRunning: true
              vsftpd:
                enabled: true
                ensureRunning: true

    Properties:
      IamInstanceProfile: !Ref InstanceProfile
      ImageId: !FindInMap [AWSRegionArch2AMI, !Ref 'AWS::Region', !FindInMap [AWSInstanceType2Arch, !Ref InstanceType, Arch]]
      InstanceType:
        Ref: InstanceType
      NetworkInterfaces:
        - AssociatePublicIpAddress: "false"
          DeviceIndex: "0"
          GroupSet:
            - Ref: "WebServerSecurityGroup"
          SubnetId:
            Ref: "VPCSubnet"
      KeyName:
        Ref: KeyName
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}'
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: !Ref EC2VolumeSizes
            VolumeType: gp3
      UserData:
        Fn::Base64: !Sub |
           #!/bin/bash -xe
           yum update -y
           yum update -y aws-cfn-bootstrap
           yum install amazon-cloudwatch-agent -y
           curl -so /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json https://raw.githubusercontent.com/kkpkishan/amazon-cloudwatch-agent/main/amazon-cloudwatch-agent-basic.json
           systemctl restart amazon-cloudwatch-agent
           systemctl enable amazon-cloudwatch-agent
           /opt/aws/bin/cfn-init -v --stack ${AWS::StackId} --resource WebServer --configsets lamp_install --region ${AWS::Region}
           /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource WebServer --region ${AWS::Region}
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Enable HTTP access via port 80 locked down to the load balancer + SSH access + FTP access"
      VpcId: !Ref VPCID
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: 80
        IpProtocol: tcp
        ToPort: 80
      - CidrIp: !Ref SSHLocation
        FromPort: 22
        IpProtocol: tcp
        ToPort: 22
      - CidrIp: !Ref FTPLocation
        FromPort: 21
        IpProtocol: tcp
        ToPort: 21
      - CidrIp: !Ref FTPLocation
        FromPort: 24000
        IpProtocol: tcp
        ToPort: 24200
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}'
  # IPAddress:
  #   Type: AWS::EC2::EIP
  #   Properties:
  #     Tags:
  #       - Key: Name
  #         Value: !Sub '${AWS::StackName}'
  # IPAssoc:
  #   Type: AWS::EC2::EIPAssociation
  #   Properties:
  #     InstanceId: !Ref 'WebServer'
  #     EIP: !Ref 'IPAddress'
  Logs:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub '${AWS::StackName}'
      RetentionInDays: !Ref LogsRetentionInDays
  IAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: 'ec2.amazonaws.com'
          Action: 'sts:AssumeRole'
      Policies:
      - !If
        - HasSystemsManagerAccess
        - PolicyName: ssm
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - 'ssmmessages:*' # SSM Agent by https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up-messageAPIs.html
              - 'ssm:UpdateInstanceInformation' # SSM agent by https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up-messageAPIs.html
              - 'ec2messages:*' # SSM Session Manager by https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up-messageAPIs.html
              Resource: '*'
        - !Ref 'AWS::NoValue'
      - PolicyName: 'ec2'
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - 'ec2:AssociateAddress'
            - 'ec2:DescribeInstances'
            - 'ec2:DescribeVolumeStatus'
            - 'ec2:DescribeTags'
            - 'ec2:DescribeVolumes'
            - 'cloudwatch:GetMetricStatistics'
            - 'cloudwatch:ListMetrics'
            - 'cloudwatch:PutMetricData'
            - 'cloudformation:DescribeStackResources'
            - 'cloudformation:DescribeStackResource'
            - 'cloudformation:DescribeStacks'
            - 'cloudformation:ListStackResources'
            - 'elasticloadbalancing:Describe*'
            Resource:
            - '*'
      - PolicyName: logs
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - 'logs:CreateLogGroup'
            - 'logs:CreateLogStream'
            - 'logs:PutLogEvents'
            - 'logs:DescribeLogStreams'
            Resource: 
            - '*'
  InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
      - !Ref IAMRole
  RecoveryAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Recovering instance when underlying hardware fails.'
      Namespace: 'AWS/EC2'
      MetricName: StatusCheckFailed_System
      Statistic: Minimum
      Period: 60
      EvaluationPeriods: 5
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0
      AlarmActions:
      - !Sub 'arn:aws:automate:${AWS::Region}:ec2:recover'
      Dimensions:
      - Name: InstanceId
        Value: !Ref WebServer
  CPUTooHighAlarm:
    Condition: HasAlertTopic
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Scale-up if CPU > 80% for 5 minutes'
      Namespace: 'AWS/EC2'
      MetricName: CPUUtilization
      Statistic: Average
      Period: 300
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      Threshold: 80
      AlarmActions:
      - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
      OKActions:
      - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
      Dimensions:
      - Name: InstanceId
        Value: !Ref WebServer
  SystemStatusAlarm:
    Condition: HasAlertTopic
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'SystemStatus over last 0 to 1.'
      Namespace: 'AWS/EC2'
      MetricName: StatusCheckFailed_System
      Statistic: Minimum
      Period: 60
      EvaluationPeriods: 2
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0
      AlarmActions:
      - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
      OKActions:
      - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
      Dimensions:
      - Name: InstanceId
        Value: !Ref WebServer
  InstanceStatusAlarm:
    Condition: HasAlertTopic
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'InstanceStatus over last 0 to 1.'
      Namespace: 'AWS/EC2'
      MetricName: StatusCheckFailed_Instance
      Statistic: Minimum
      Period: 60
      EvaluationPeriods: 3
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0
      AlarmActions:
      - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
      OKActions:
      - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
      Dimensions:
      - Name: InstanceId
        Value: !Ref WebServer
Outputs:
  PrivateIP:
    Description: EC2 public IP
    Value: !GetAtt WebServer.PrivateIp
    Export:
      Name: !Sub '${AWS::StackName}-PublicIP'
  WebsiteURL:
    Description: Website
    Value: !Sub "http://${WebServer.PublicDnsName}"
    Export:
      Name: !Sub '${AWS::StackName}-WebsiteURL'
